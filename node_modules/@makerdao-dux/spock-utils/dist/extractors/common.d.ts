export declare const DEFAULT_ADDRESS = "0x0000000000000000000000000000000000000000";
import { BlockModel } from '@makerdao-dux/spock-etl/dist/db/models/Block';
import { LocalServices, TransactionalServices } from '@makerdao-dux/spock-etl/dist/services/types';
import { Transaction } from 'ethers/utils';
export declare function getOrCreateTx(services: TransactionalServices, transactionHash: string, block: BlockModel): Promise<PersistedTransaction>;
export declare function getTx({ tx, processorSchema }: LocalServices, txHash: string): Promise<PersistedTransaction | undefined>;
export declare function getTxByIdOrDie({ tx, processorSchema }: LocalServices, txId: number): Promise<PersistedTransaction>;
export declare function addTx(services: LocalServices, transaction: Transaction, block: BlockModel): Promise<PersistedTransaction>;
interface PersistedTransaction {
    id: number;
    hash: string;
    nonce: number;
    from_address: string;
    to_address: string;
    value: string;
    gas_limit: string;
    gas_price: string;
    data: string;
    block_id: number;
}
export declare function matchMissingForeignKeyError(e: any): boolean;
export declare function matchUniqueKeyError(e: any): boolean;
export declare function matchDeadlockDetectedError(e: any): boolean;
export declare const silenceError: (...matchers: ((e: any) => boolean)[]) => (e: any) => void;
export declare class RetryableError extends Error {
}
export {};
