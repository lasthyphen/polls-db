import { BlockModel } from '@makerdao-dux/spock-etl/dist/db/models/Block';
import { BlockExtractor } from '@makerdao-dux/spock-etl/dist/processors/types';
import { LocalServices, TransactionalServices } from '@makerdao-dux/spock-etl/dist/services/types';
import { Log } from 'ethers/providers';
interface AbiInfo {
    name: string;
    abi: Object;
    startingBlock?: number;
}
export declare function makeRawEventBasedOnTopicExtractor(abis: AbiInfo[]): BlockExtractor[];
export declare function extractRawLogsOnTopic(services: TransactionalServices, blocks: BlockModel[], topics: string[]): Promise<PersistedLog[]>;
export declare function getPersistedLogsByTopic(services: LocalServices, topics: string[], blocks: BlockModel[]): Promise<any[]>;
export declare function getExtractorName(name: string): string;
export interface PersistedLog {
    block_id: number;
    tx_id: number;
    log_index: number;
    address: string;
    data: string;
    topics: string;
}
export declare function getLogsBasedOnTopics(services: TransactionalServices, blocks: BlockModel[], topics: string[]): Promise<Log[]>;
export {};
