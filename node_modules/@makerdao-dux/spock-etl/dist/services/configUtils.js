"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRequiredNumber = exports.getRequiredString = exports.mergeConfig = exports.loadConfig = void 0;
const lodash_1 = require("lodash");
const path_1 = require("path");
const modules_1 = require("../utils/modules");
const config_1 = require("./config");
function loadConfig(externalConfigPath) {
    // Here we'll have an array of one or more configs:
    const configModule = modules_1.loadExternalModule(externalConfigPath);
    if (!Array.isArray(configModule)) {
        throw new Error(`User-config must be passsed as an array!`);
    }
    const mergedConfigs = configModule.map((cfg) => {
        const externalCfg = fixConfigPaths(externalConfigPath, cfg);
        const mergedConfig = mergeConfig(externalCfg);
        return mergedConfig;
    });
    return mergedConfigs;
}
exports.loadConfig = loadConfig;
function mergeConfig(externalCfg) {
    const defaultCfg = config_1.getDefaultConfig(process.env);
    const finalConfig = lodash_1.merge({}, defaultCfg, externalCfg);
    return config_1.spockConfigSchema.parse(finalConfig);
}
exports.mergeConfig = mergeConfig;
/**
 * Turn any relative paths in the config to absolute ones
 */
function fixConfigPaths(configPath, config) {
    const newMigrations = lodash_1.mapValues(config.migrations, (path) => {
        if (path_1.isAbsolute(path)) {
            return path;
        }
        else {
            return path_1.join(path_1.dirname(configPath), path);
        }
    });
    config.migrations = newMigrations;
    return config;
}
function getRequiredString(env, name) {
    const value = env[name];
    if (value === undefined) {
        throw new Error(`Required env var ${name} missing`);
    }
    return value;
}
exports.getRequiredString = getRequiredString;
function getRequiredNumber(env, name) {
    const string = getRequiredString(env, name);
    const number = parseInt(string);
    if (isNaN(number)) {
        throw new Error(`Couldn't parse ${name} as number`);
    }
    return number;
}
exports.getRequiredNumber = getRequiredNumber;
//# sourceMappingURL=configUtils.js.map