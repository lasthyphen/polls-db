import { BlockModel } from '../db/models/Block';
import { LocalServices, TransactionalServices } from '../services/types';
export interface BlockExtractor {
    name: string;
    startingBlock?: number;
    extractorDependencies?: string[];
    disablePerfBoost?: boolean;
    extract: (services: TransactionalServices, blocks: BlockModel[]) => Promise<void>;
    getData(services: LocalServices, blocks: BlockModel[]): Promise<any>;
}
export interface BlockTransformer {
    name: string;
    startingBlock?: number;
    dependencies: string[];
    transformerDependencies?: string[];
    transform(service: LocalServices, data: any[]): Promise<void>;
}
export declare type Processor = BlockTransformer | BlockExtractor;
export declare function isExtractor(p: Processor): p is BlockExtractor;
export declare type JobType = 'extract' | 'transform';
