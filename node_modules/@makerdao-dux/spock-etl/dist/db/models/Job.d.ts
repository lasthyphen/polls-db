import { Connection } from '../db';
export interface JobModel {
    id: number;
    name: string;
    last_block_id: number;
    status: JobStatus;
    extra_info?: string;
}
export declare type JobStatus = 'processing' | 'stopped' | 'not-ready';
export declare type WritableJobModel = Omit<JobModel, 'id'>;
export declare function saveJob(c: Connection, job: WritableJobModel, schema: string): Promise<void>;
export declare function getJob(c: Connection, jobName: string, schema: string): Promise<JobModel | undefined>;
export declare function getAllJobs(c: Connection, schema: string): Promise<JobModel[]>;
export declare function setJobStatus(c: Connection, job: JobModel, newStatus: JobStatus, schema: string): Promise<void>;
export declare function stopJob(c: Connection, jobName: string, extraInfo: string, schema: string): Promise<void>;
export declare function excludeAllJobs(c: Connection, schema: string): Promise<void>;
