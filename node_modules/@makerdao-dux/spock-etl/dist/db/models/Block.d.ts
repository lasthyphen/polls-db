import type pg from 'pg-promise';
import { DbConnection, Connection } from '../db';
export interface BlockModel {
    id: number;
    number: number;
    hash: string;
    timestamp: string;
}
export interface WritableBlockModel {
    number: number;
    hash: string;
    timestamp: Date;
}
export declare function getBlock(c: Connection, blockHash: string, schema: string): Promise<BlockModel | undefined>;
export declare function getBlockById(c: Connection, id: number, schema: string): Promise<BlockModel | undefined>;
export declare function getBlockByNumber(c: DbConnection, id: number, schema: string): Promise<BlockModel | undefined>;
export declare function getBlockByIdOrDie(c: Connection, id: number, schema: string): Promise<BlockModel>;
export declare function getBlockRange(c: Connection, start: number, end: number, schema: string): Promise<BlockModel[]>;
export declare function getLastBlockNumber(c: Connection, schema: string): Promise<number | undefined>;
export declare function removeBlockByHash(c: Connection, blockHash: string, schema: string): Promise<void>;
export declare function insertBlocksBatch(c: Connection, pg: pg.IMain, blocks: WritableBlockModel[], schema: string): Promise<BlockModel[]>;
