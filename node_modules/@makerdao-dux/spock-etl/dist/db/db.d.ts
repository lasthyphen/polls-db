import pg from 'pg-promise';
import { IConnectionParameters } from 'pg-promise/typescript/pg-subset';
export declare type DB = pg.IDatabase<{}>;
export declare type DbConnection = pg.IConnected<{}, any>;
export declare type DbTransactedConnection = pg.ITask<{}>;
export declare type ColumnSets = ReturnType<typeof getColumnSets>;
export declare type Connection = DbConnection | DbTransactedConnection;
export declare type DbContext = {
    db: DB;
    pg: pg.IMain;
    getColumnSetsForChain: (processorSchema: string, extractedSchema: string) => ColumnSets;
};
export declare function createDB(config: IConnectionParameters): DbContext;
export declare function withConnection<T>(db: DB, action: (connection: DbConnection) => Promise<T>): Promise<T>;
export declare function makeNullUndefined<T>(value: T | null): T | undefined;
export declare function getColumnSets(pg: pg.IMain, processorSchema: string, extractedSchema: string): {
    block: pg.ColumnSet;
    extracted_logs: pg.ColumnSet;
};
