import { ZodTypes } from "../ZodTypes";
import { ZodType, ZodTypeDef, ZodTypeAny } from "./base";
export interface ZodNullableDef<T extends ZodTypeAny = ZodTypeAny> extends ZodTypeDef {
    t: ZodTypes.nullable;
    innerType: T;
}
export declare type ZodNullableType<T extends ZodTypeAny> = T extends ZodNullable<ZodTypeAny> ? T : ZodNullable<T>;
export declare class ZodNullable<T extends ZodTypeAny> extends ZodType<T["_output"] | null, ZodNullableDef<T>, T["_input"] | null> {
    toJSON: () => {
        t: ZodTypes.nullable;
        innerType: object;
    };
    static create: <T_1 extends ZodTypeAny>(type: T_1) => ZodNullableType<T_1>;
}
