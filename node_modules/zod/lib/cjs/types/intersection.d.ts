import { ZodTypes } from "../ZodTypes";
import { ZodType, ZodTypeDef, ZodTypeAny } from "./base";
export interface ZodIntersectionDef<T extends ZodTypeAny = ZodTypeAny, U extends ZodTypeAny = ZodTypeAny> extends ZodTypeDef {
    t: ZodTypes.intersection;
    left: T;
    right: U;
}
export declare class ZodIntersection<T extends ZodTypeAny, U extends ZodTypeAny> extends ZodType<T["_output"] & U["_output"], ZodIntersectionDef<T, U>, T["_input"] & U["_input"]> {
    toJSON: () => {
        t: ZodTypes.intersection;
        left: object;
        right: object;
    };
    static create: <T_1 extends ZodTypeAny, U_1 extends ZodTypeAny>(left: T_1, right: U_1) => ZodIntersection<T_1, U_1>;
}
