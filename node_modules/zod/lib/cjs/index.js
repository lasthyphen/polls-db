"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.map = exports.literal = exports.lazy = exports.intersection = exports.instanceof = exports.function = exports.enum = exports.date = exports.codegen = exports.boolean = exports.bigint = exports.array = exports.any = exports.ZodVoid = exports.ZodUnknown = exports.ZodUnion = exports.ZodUndefined = exports.ZodTuple = exports.ZodTransformer = exports.ZodString = exports.ZodRecord = exports.ZodPromise = exports.ZodParsedType = exports.ZodOptional = exports.ZodObject = exports.ZodNumber = exports.ZodNullable = exports.ZodNull = exports.ZodNever = exports.ZodNativeEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodIntersection = exports.ZodFunction = exports.ZodEnum = exports.ZodDate = exports.ZodCodeGenerator = exports.ZodBoolean = exports.ZodBigInt = exports.ZodArray = exports.ZodAny = exports.ZodTypes = exports.ZodSchema = exports.Schema = exports.ZodType = exports.custom = void 0;
exports.late = exports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.string = exports.record = exports.promise = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = void 0;
var base_1 = require("./types/base");
Object.defineProperty(exports, "ZodType", { enumerable: true, get: function () { return base_1.ZodType; } });
Object.defineProperty(exports, "Schema", { enumerable: true, get: function () { return base_1.ZodType; } });
Object.defineProperty(exports, "ZodSchema", { enumerable: true, get: function () { return base_1.ZodType; } });
var any_1 = require("./types/any");
Object.defineProperty(exports, "ZodAny", { enumerable: true, get: function () { return any_1.ZodAny; } });
var array_1 = require("./types/array");
Object.defineProperty(exports, "ZodArray", { enumerable: true, get: function () { return array_1.ZodArray; } });
var bigint_1 = require("./types/bigint");
Object.defineProperty(exports, "ZodBigInt", { enumerable: true, get: function () { return bigint_1.ZodBigInt; } });
var boolean_1 = require("./types/boolean");
Object.defineProperty(exports, "ZodBoolean", { enumerable: true, get: function () { return boolean_1.ZodBoolean; } });
var date_1 = require("./types/date");
Object.defineProperty(exports, "ZodDate", { enumerable: true, get: function () { return date_1.ZodDate; } });
var enum_1 = require("./types/enum");
Object.defineProperty(exports, "ZodEnum", { enumerable: true, get: function () { return enum_1.ZodEnum; } });
var function_1 = require("./types/function");
Object.defineProperty(exports, "ZodFunction", { enumerable: true, get: function () { return function_1.ZodFunction; } });
var intersection_1 = require("./types/intersection");
Object.defineProperty(exports, "ZodIntersection", { enumerable: true, get: function () { return intersection_1.ZodIntersection; } });
var lazy_1 = require("./types/lazy");
Object.defineProperty(exports, "ZodLazy", { enumerable: true, get: function () { return lazy_1.ZodLazy; } });
var literal_1 = require("./types/literal");
Object.defineProperty(exports, "ZodLiteral", { enumerable: true, get: function () { return literal_1.ZodLiteral; } });
var map_1 = require("./types/map");
var nativeEnum_1 = require("./types/nativeEnum");
Object.defineProperty(exports, "ZodNativeEnum", { enumerable: true, get: function () { return nativeEnum_1.ZodNativeEnum; } });
var never_1 = require("./types/never");
Object.defineProperty(exports, "ZodNever", { enumerable: true, get: function () { return never_1.ZodNever; } });
var null_1 = require("./types/null");
Object.defineProperty(exports, "ZodNull", { enumerable: true, get: function () { return null_1.ZodNull; } });
var nullable_1 = require("./types/nullable");
Object.defineProperty(exports, "ZodNullable", { enumerable: true, get: function () { return nullable_1.ZodNullable; } });
var number_1 = require("./types/number");
Object.defineProperty(exports, "ZodNumber", { enumerable: true, get: function () { return number_1.ZodNumber; } });
var object_1 = require("./types/object");
Object.defineProperty(exports, "ZodObject", { enumerable: true, get: function () { return object_1.ZodObject; } });
var optional_1 = require("./types/optional");
Object.defineProperty(exports, "ZodOptional", { enumerable: true, get: function () { return optional_1.ZodOptional; } });
var promise_1 = require("./types/promise");
Object.defineProperty(exports, "ZodPromise", { enumerable: true, get: function () { return promise_1.ZodPromise; } });
var record_1 = require("./types/record");
Object.defineProperty(exports, "ZodRecord", { enumerable: true, get: function () { return record_1.ZodRecord; } });
var string_1 = require("./types/string");
Object.defineProperty(exports, "ZodString", { enumerable: true, get: function () { return string_1.ZodString; } });
var transformer_1 = require("./types/transformer");
Object.defineProperty(exports, "ZodTransformer", { enumerable: true, get: function () { return transformer_1.ZodTransformer; } });
var tuple_1 = require("./types/tuple");
Object.defineProperty(exports, "ZodTuple", { enumerable: true, get: function () { return tuple_1.ZodTuple; } });
var undefined_1 = require("./types/undefined");
Object.defineProperty(exports, "ZodUndefined", { enumerable: true, get: function () { return undefined_1.ZodUndefined; } });
var union_1 = require("./types/union");
Object.defineProperty(exports, "ZodUnion", { enumerable: true, get: function () { return union_1.ZodUnion; } });
var unknown_1 = require("./types/unknown");
Object.defineProperty(exports, "ZodUnknown", { enumerable: true, get: function () { return unknown_1.ZodUnknown; } });
var void_1 = require("./types/void");
Object.defineProperty(exports, "ZodVoid", { enumerable: true, get: function () { return void_1.ZodVoid; } });
var ZodParsedType_1 = require("./ZodParsedType");
Object.defineProperty(exports, "ZodParsedType", { enumerable: true, get: function () { return ZodParsedType_1.ZodParsedType; } });
var ZodTypes_1 = require("./ZodTypes");
Object.defineProperty(exports, "ZodTypes", { enumerable: true, get: function () { return ZodTypes_1.ZodTypes; } });
var codegen_1 = require("./codegen");
Object.defineProperty(exports, "ZodCodeGenerator", { enumerable: true, get: function () { return codegen_1.ZodCodeGenerator; } });
var stringType = string_1.ZodString.create;
exports.string = stringType;
var numberType = number_1.ZodNumber.create;
exports.number = numberType;
var bigIntType = bigint_1.ZodBigInt.create;
exports.bigint = bigIntType;
var booleanType = boolean_1.ZodBoolean.create;
exports.boolean = booleanType;
var dateType = date_1.ZodDate.create;
exports.date = dateType;
var undefinedType = undefined_1.ZodUndefined.create;
exports.undefined = undefinedType;
var nullType = null_1.ZodNull.create;
exports.null = nullType;
var anyType = any_1.ZodAny.create;
exports.any = anyType;
var unknownType = unknown_1.ZodUnknown.create;
exports.unknown = unknownType;
var neverType = never_1.ZodNever.create;
exports.never = neverType;
var voidType = void_1.ZodVoid.create;
exports.void = voidType;
var arrayType = array_1.ZodArray.create;
exports.array = arrayType;
var objectType = object_1.ZodObject.create;
exports.object = objectType;
var unionType = union_1.ZodUnion.create;
exports.union = unionType;
var intersectionType = intersection_1.ZodIntersection.create;
exports.intersection = intersectionType;
var tupleType = tuple_1.ZodTuple.create;
exports.tuple = tupleType;
var recordType = record_1.ZodRecord.create;
exports.record = recordType;
var mapType = map_1.ZodMap.create;
exports.map = mapType;
var functionType = function_1.ZodFunction.create;
exports.function = functionType;
var lazyType = lazy_1.ZodLazy.create;
exports.lazy = lazyType;
var literalType = literal_1.ZodLiteral.create;
exports.literal = literalType;
var enumType = enum_1.ZodEnum.create;
exports.enum = enumType;
var nativeEnumType = nativeEnum_1.ZodNativeEnum.create;
exports.nativeEnum = nativeEnumType;
var promiseType = promise_1.ZodPromise.create;
exports.promise = promiseType;
var transformerType = transformer_1.ZodTransformer.create;
exports.transformer = transformerType;
var optionalType = optional_1.ZodOptional.create;
exports.optional = optionalType;
var nullableType = nullable_1.ZodNullable.create;
exports.nullable = nullableType;
var ostring = function () { return stringType().optional(); };
exports.ostring = ostring;
var onumber = function () { return numberType().optional(); };
exports.onumber = onumber;
var oboolean = function () { return booleanType().optional(); };
exports.oboolean = oboolean;
var codegen = codegen_1.ZodCodeGenerator.create;
exports.codegen = codegen;
var custom = function (check, params) {
    if (check)
        return anyType().refine(check, params);
    return anyType();
};
exports.custom = custom;
var instanceOfType = function (cls, params) {
    if (params === void 0) { params = {
        message: "Input not instance of " + cls.name,
    }; }
    return exports.custom(function (data) { return data instanceof cls; }, params);
};
exports.instanceof = instanceOfType;
exports.late = {
    object: object_1.ZodObject.lazycreate,
};
__exportStar(require("./ZodDef"), exports);
__exportStar(require("./ZodError"), exports);
//# sourceMappingURL=index.js.map